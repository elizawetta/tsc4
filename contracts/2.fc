{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}
(int) tlen (tuple t) asm "TLEN";
;; forall X -> tuple tpush(tuple t, X value) asm "TPUSH";
;; forall X -> (tuple, ()) ~tpush(tuple t, X value) asm "TPUSH";
;; forall X -> (tuple, ()) ~tpush(tuple t, X value) asm "TPUSH";
() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  int n = matrixA.tlen();
  int m = matrixA.at(0).tlen();
  int p = matrixB.at(0).tlen();

  tuple mat = empty_tuple();
  tuple new_mat = empty_tuple();

  int i = 0;
  int j = 0; 
  int k = 0;
  int hui = 0;
  repeat (n) {
    repeat (p){
      repeat (m){
        hui += matrixA.at(i).at(k) * matrixB.at(k).at(j);
        k += 1;
      }
      k = 0;
      new_mat~tpush(hui);
      hui = 0;
      j += 1;
    }
    j = 0;
    mat~tpush(new_mat);
    new_mat = empty_tuple();
    i += 1;
  }

  return mat;  
}

